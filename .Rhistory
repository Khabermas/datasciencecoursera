A <- c(80, 15, 5)
B <- c(60, 30, 10)
M <- rbind(A, B)
M
Y <- c(43, 8)
N <- c(4, 45)
dat <- matrix(c(43, 8, 45, 4), 2)
dat
chisq.test(dat, correct=FALSE)
chisq.test(dat, simulate.p.value=TRUE)
Q <- matrix(c(0, 135, 240, 267, 0, 234, 255, 139, 0), 3)
Q
summary(Q)
Q[1,]
sum(Q[1,])
135+139
240+234
267+234
255+139
dat <- c(46, 54, 49, 51)
pv <- c(.25, .25, .25, .25)
chisq.test(dat, pv, correct=FALSE)
chisq.test(dat, correct=FALSE, p=pv)
Exex <- c(66, 35)
Prof <- c(70, 30)
LT <- c(15, 85)
M <- rbomd(Exeec, Prof, LT)
M <- rbind(Exex, Prof, LT)
M
chisq.test(M, correct=FALSE)
k <- c(.53, .35, .12)
N <- c(140, 100, 50)
n <- N/sum(N)
n
M <- rbind(k, n)
M
chisq.test(M, correct=FALSE)
t <- (.4, .5, .1)
t <- c(.4, .5, .1)
N <- rbind(k, t)
N
chisq(N, correct=FALSE)
chisq.test(N, correct=FALSE)
dat <- c(140, 100, 50)
k <- c(.53, .35, .12)
chisq.test(dat, p=k, correct=FALSE)
chisq.test(dat, p=k, simulate.p.value=TRUE)
dat <- matrix(c(43, 8, 4, 45), 2)
dat
chisq.test(dat, correct=FALSE)
help(chisq.test)
p <- c(.53, .35, .12)
x <- c(140, 100, 50)
chisq.test(x, p=p, correct=FALSE)
chisq.test(x, p=p, correct=TRUE)
chisq.test(x, p=p, simulate.p.value=TRUE)
Xsq <- chisq.test(x, p=p, correct=FALSE)
xsq$observed
Xsq$observed
Xsq$expected
Xsq$residuals
Xsq$stdres
Xsq$p.value
help(chisq)
??chisq
M <- matrix(c(5, 1, 4, 0), 2)
M
mcnemar.test(M, correct=FALSE)
mcnemar.test(M)
help(binom)
??binom
binom(1, 5, p=.5, alternative="two.sided")
binom.test(1, 5, p=.5, alternative="two.sided")
M <- matrix(c(243, 189, 54, 153), 2)
M
help(counts)
help(sum)
n <- sum(M)
MM <- M/n
MM
sum(MM)
p_1 <- sum(M[,1])
p_1
p_1 <- sum(MM[,1])
p_2 <- sum(MM[,2])
p1_ <- sum(MM[1,])
p2_ <- sum(MM[2,])
p_1 + p_2
p1_ + p2_
MOR <- (p1_ * p_2)/(p_1 * p2_)
1/MOR
help(mcnemar.test)
mcnemar.test(M)
help(binom.test)
binom.test(5, 5, p=0.5, conf.level=0.95)
binom.test(5, 5, p=0.5, conf.level=0.95, alternatve="less")
binom.test(5, 5, p=0.5, alternatve="less")
binom.test(5, 5, p=0.5, conf.level=0.95, alternatve=less)
binom.test(5, 5, p=0.5, less, conf.level=0.95)
binom.test(5, 5, p=0.5, alternative="greater")
binom.test(4, 5, p=0.5, alternative="greater")
binom.test(16, 20, p=0.5, alternative="greater")
help(wilcox.test)
binom.test(4, 5, p=0.9, alternative="greater")
binom.test(4, 5, p=0.9, alternative="less")
binom.test(5, 5, p=0.9, alternative="greater")
binom.test(5, 5, p=0.9, alternative="less")
help(mantelhaen.test)
dat <- array(c(8, 52, 5, 164, 25, 29, 21, 128), c(2, 2, 2))
mantelhaen.test(dat, correct=FALSE)
help(wilcoxen)
??wilcoxen
x <- c(9, 6, 2)
y <- c(6, 4, 1)
wilcox.test(x, y, alternative="two.sided", paired=TRUE)
wilcox.test(x, y, alternative="two.sided", paired=TRUE, exact=TRUE)
?? McNemar
M <- matrix(c(55,12,41,20),2)
M
mcnemar.test(M, correct=FALSE)
mcnemar.test(M, correct=TRUE)
n <- sum(M)
n
MP <- M/n
MP
sum(MP)
p_1 <- sum(MP[,1])
p_2 <- sum(MP[,2])
p1_ <- sum(MP[1,])
p2- <- sum(MP[2,])
p2_ <- sum(MP[2,])
p_1 + p_2
p1_ + p_2
p1_ + p2_
S <- (p1_*p_2)/(p_1*p2_)
S
g <- log(181/54)
g
??sign test
?"sign test"
??sign.test
??sign
library(glmnet)
install.packages("glmnet")
m <- 100
mb <- 36
mr <- 64
ce <- -(mb/m*log(mb/m)) -(mr/m*log(mr/m))
g <- (mb*mr)/m^2
g <- (mb/m)* (1-(mb/m)) + (mr/m)*(1-(mr/m))
g
x = c(.1, .15, .2, .2, .55, .6, .6, .65, .7, .75)
mean(c)
summary(c)
mean(x)
x <- c(5, 3, 0, 4)
y <- c(4, 4, 1, 3)
z <- x-y
z
h <- 2*6 -1
x2 <- c(7921, 5184, 8836, 4761)
mean(x2)
r <- 8836-4761
n <- (4761 - mean(x2))/r
library(tree)
require(tree)
install.packages("tree")
install.packages("gbm")
install.packages("randomForest")
help(rnorm)
set.seed(17)
x <- matrix(rnorm(100*10), col = 10)
x <- matrix(rnorm(100*10), ncol = 10)
help(rep)
q = rep(c(0, 1), c(10, 10))
summary(q)
clear(q)
delete(q)
rm(q)
y <- rep(c(0, 1), c(50, 50))
x[1]
summary(x)
x[y==1,] = x[y==1,][,1:5] +1
summary(x)
rm(x)
x <- matrix(rnorm(100*10), ncol = 10)
summary(x)
x[y==1,] <- x[y==1, 1:5] + 1
summary(x)
x <- matrix(rnorm(100*10), ncol = 10)
x[y==1,] <- x[y==1,][v1:v5] + 1
help(matrix)
ncol(x)
nrow(x)
help(subset)
help([])
x <- matrix(rnorm(100*10), ncol = 10)
summary(x)
x[y==1,][,1:5] = x[y==1,][,1:5] + 1
summary(x)
install.packages("e1071")
library(e1071)
dat <- data.frame(x, y=as.factor(y))
help(svm)
help(sample)
set.seed(18)
xtest <- x <- matrix(rnorm(1000*10), ncol = 10)
set.seed(17)
x <- matrix(rnorm(100*10), col = 10)
y <- rep(c(0, 1), c(50, 50))
x[y==1,][,1:5] = x[y==1,][,1:5] + 1
View(x)
set.seed(17)
x <- matrix(rnorm(100*10), ncol = 10)
y <- rep(c(0, 1), c(50, 50))
x[y==1,][,1:5] = x[y==1,][,1:5] + 1
plot(x,y)
set.seed(18)
xtest <- matrix(rnorm(1000*10), ncol = 10)
ytest <- rep(c(0, 1), c(500, 500))
library(e1071)
trdat <- data.frame(x, y=as.factor(y))
svmfit <- svm(y~., data = trdat)
prin(svmfit)
print(svmfit)
plot(svmfit, trdat)
plot.svm(svmfit, trdat)
help(plot.svm)
help(make.grid)
help(predict)
testdat <- data.frame(xtest, ytest=as.factor(ytest))
testpred <- predict.svm(svmfit, testdat)
testpred <- predict(svmfit, testdat)
summary(testpred)
table(testpred, ytest)
73/(73+418)
82/(82+427)
table(ytest, testpred)
set.seed(2101)
x1 <- matrix(rnorm(100*10), ncol = 10)
y1 <- rep(c(0, 1), c(50, 50))
set.seed(17)
x <- matrix(rnorm(100*10), ncol = 10)
y <- rep(c(0, 1), c(50, 50))
x[y==1,][,1:5] = x[y==1,][,1:5] + 1
set.seed(18)
xtest <- matrix(rnorm(1000*10), ncol = 10)
ytest <- rep(c(0, 1), c(500, 500))
xtest[ytest==1,][,1:5] = xtest[ytest==1,][,1:5] + 1
library(e1071)
trdat <- data.frame(x, y=as.factor(y))
svmfit <- svm(y~., data = trdat)
testdat <- data.frame(xtest, ytest=as.factor(ytest))
testpred <- predict(svmfit, testdat)
table(testpred, ytest)
81/500
x1 <- matrix(rnorm(100*10), ncol = 10)
y1 <- rep(c(0, 1), c(50, 50))
x1[y1==1,][,1:5] = x1[y1==1,][,1:5] + 1
trdat1 <- data.frame(x1, y1=as.factor(y1))
svmfit1 <- svm(y1~., data = trdat1))
svmfit1 <- svm(y1~., data = trdat1)
testpred1 <- predict(svmfit1, testdat)
table(testpred1, ytest)
testpred1 <- predict(svmfit1, testdat1)
svmfitLin <- svm(y~., data = trdat, kernel = "linear")
tpredL <- predict(svmfitLin, testdat)
table(tpredL, ytest)
svmfitLin
svmfitLin1 <- svm(y1~., data = trdat1, kernel = "linear")
svmfitLin1
svmfitLin1 <- svm(y1~., data = trdat1, kernel = "linear")
tpredL1 <- predict(svmfitLin1, testdat)
table(tpredL1, ytest)
help(glm)
glmF <- glm(y~., data = trdat, family = 'binomial')
glmP <- predict(glmF, testdat)
table(glmP, ytest)
table(glmP, ytest)
help(predict)
glmF
rm(glmF)
rm(glmP)
glmF <- glm(formula = y ~ ., family = "binomial", data = trdat)
glmP <- predict.glm(glmF, newdata = testdat, type = "response")
summary(glmP)
help(round)
glmR <- round(glmP)
table(glmR, ytest)
(81+93)/1000
a1 = c(0.5, 0.5, 0.5, 0.5)
a2 = (0, 0, -0.71, -0.71)
a2 = c(0, 0, -0.71, -0.71)
b1 = c(0.5, 0.5, 0.5, 0.5)
b2 = c(0.5, 0.5, -0.5, -0.5)
c1 = c(0.5, 0.5, 0.5, 0.5)
c2 = c(-0.5, -0.5, 0.5, 0.5)
d1 = c(0.71, 0.71, 0, 0)
d2 = c(0, 0, 0.71, 0.71)
e1 = c(0.71, 0, -0.71, 0)
e2 = c(0, 0.71, 0, -0.71)
a1^2
sum(a1^2)
sum(a2^2)
sum(b1^1)
sum(b1^2)
sum(b2^2)
sum(c1^1)
sum(c1^2)
sum(c2^2)
sum(d1^2)
sum(d2^2)
sum(e1^2)
sum(e2^2)
?? inner product
help(inner.product)
??inner.product
??'inner product'
??'dot product'
??vector_product
??vector
??(scaler product)
a1*a2
b1*b2
c1*c2
d1*d2
d1*e2
e1*e2
aa1 = c(0.5, 0.5, 0.5, 0.5)
aa2 = c(0.71, 0.71, 0, 0)
sum(aa1^2)
sum(aa2^2)
aa1*aa2
load(USArrests)
import(USArrests)
require("USArrests")
load("USArrests")
??binary
a<- v1(abcde)
a<- = c(012345)
a <- c('012345')
a
ct1 <- c("315c4eeaa8b5f8aaf9174145bf43e1784b8fa00dc71d885a804e5ee9fa40b16349c146fb778cdf2d3aff021dfff5b403b510d0d0455468aeb98622b137dae857553ccd8883a7bc37520e06e515d22c954eba5025b8cc57ee59418ce7dc6bc41556bdb36bbca3e8774301fbcaa3b83b220809560987815f65286764703de0f3d524400a19b159610b11ef3e"
ct2 = "234c02ecbbfbafa3ed18510abd11fa724fcda2018a1a8342cf064bbde548b12b07df44ba7191d9606ef4081ffde5ad46a5069d9f7f543bedb9c861bf29c7e205132eda9382b0bc2c5c4b45f919cf3a9f1cb74151f6d551f4480c82b2cb24cc5b028aa76eb7b4ab24171ab3cdadb8356f")
ct1 <-c("315c4eeaa8b5f8aaf9174145bf43e1784b8fa00dc71d885a804e5ee9fa40b16349c146fb778cdf2d3aff021dfff5b403b510d0d0455468aeb98622b137dae857553ccd8883a7bc37520e06e515d22c954eba5025b8cc57ee59418ce7dc6bc41556bdb36bbca3e8774301fbcaa3b83b220809560987815f65286764703de0f3d524400a19b159610b11ef3e")
ct2 <- c("234c02ecbbfbafa3ed18510abd11fa724fcda2018a1a8342cf064bbde548b12b07df44ba7191d9606ef4081ffde5ad46a5069d9f7f543bedb9c861bf29c7e205132eda9382b0bc2c5c4b45f919cf3a9f1cb74151f6d551f4480c82b2cb24cc5b028aa76eb7b4ab24171ab3cdadb8356f")
ct3 <- c("32510ba9a7b2bba9b8005d43a304b5714cc0bb0c8a34884dd91304b8ad40b62b07df44ba6e9d8a2368e51d04e0e7b207b70b9b8261112bacb6c866a232dfe257527dc29398f5f3251a0d47e503c66e935de81230b59b7afb5f41afa8d661cb")
ct4 <- c("e305cd3a9544ee4160ead45aef520489e7da7d835402bca670bda8eb775200b8dabbba246b130f040d8ec6447e2c767f3d30ed81ea2e4c1404e1315a1010e7229be6636aaa")
ct5 <- c("3f561ba9adb4b6ebec54424ba317b564418fac0dd35f8c08d31a1fe9e24fe56808c213f17c81d9607cee021dafe1e001b21ade877a5e68bea88d61b93ac5ee0d562e8e9582f5ef375f0a4ae20ed86e935de81230b59b73fb4302cd95d770c65b40aaa065f2a5e33a5a0bb5dcaba43722130f042f8ec85b7c2070")
ct6 <- c("32510bfbacfbb9befd54415da243e1695ecabd58c519cd4bd2061bbde24eb76a19d84aba34d8de287be84d07e7e9a30ee714979c7e1123a8bd9822a33ecaf512472e8e8f8db3f9635c1949e640c621854eba0d79eccf52ff111284b4cc61d11902aebc66f2b2e436434eacc0aba938220b084800c2ca4e693522643573b2c4ce35050b0cf774201f0fe52ac9f26d71b6cf61a711cc229f77ace7aa88a2f19983122b11be87a59c355d25f8e4")
ct7 <- c("32510bfbacfbb9befd54415da243e1695ecabd58c519cd4bd90f1fa6ea5ba47b01c909ba7696cf606ef40c04afe1ac0aa8148dd066592ded9f8774b529c7ea125d298e8883f5e9305f4b44f915cb2bd05af51373fd9b4af511039fa2d96f83414aaaf261bda2e97b170fb5cce2a53e675c154c0d9681596934777e2275b381ce2e40582afe67650b13e72287ff2270abcf73bb028932836fbdecfecee0a3b894473c1bbeb6b4913a536ce4f9b13f1efff71ea313c8661dd9a4ce")
ct8 <- c("315c4eeaa8b5f8bffd11155ea506b56041c6a00c8a08854dd21a4bbde54ce56801d943ba708b8a3574f40c00fff9e00fa1439fd0654327a3bfc860b92f89ee04132ecb9298f5fd2d5e4b45e40ecc3b9d59e9417df7c95bba410e9aa2ca24c5474da2f276baa3ac325918b2daada43d6712150441c2e04f6565517f317da9d3")
ct9 <- c("271946f9bbb2aeadec111841a81abc300ecaa01bd8069d5cc91005e9fe4aad6e04d513e96d99de2569bc5e50eeeca709b50a8a987f4264edb6896fb537d0a716132ddc938fb0f836480e06ed0fcd6e9759f40462f9cf57f4564186a2c1778f1543efa270bda5e933421cbe88a4a52222190f471e9bd15f652b653b7071aec59a2705081ffe72651d08f822c9ed6d76e48b63ab15d0208573a7eef027")
ct10 = c("466d06ece998b7a2fb1d464fed2ced7641ddaa3cc31c9941cf110abbf409ed39598005b3399ccfafb61d0315fca0a314be138a9f32503bedac8067f03adbf3575c3b8edc9ba7f537530541ab0f9f3cd04ff50d66f1d559ba520e89a2cb2a83")
b1 <- c('0b
00001111011110000011110011110101010010010001000000000010100001100110110001010110010110000100001011000100011110111100111110'
)
b1 = c('0b
0001111011110000011110011110101010010010001000000000010100001100110110001010110010110000100001011000100011110111100111110')
b2 = c('0b100011010011000000001011101100101110111111101110101111101000111110110100011000010100010000101010111101000100011111101001110010010011111100110110100010000000011000101000011010100000110100001011001111000001100100101110111101111001010100100010110001001010110000011111011111010001001011101001110001100100011101100101100000011011101111010000001000000111111111110111100101101011010100011010100101000001101001110110011111011111110101010000111011111011011011100111001000011000011011111100101001110001111110001000000101000100110010111011011010100100111000001010110000101111000010110001011100010010110100010111111001000110011100111100111010100111110001110010110111010000010101000111110110110101010101000111110100010010000000110010000010101100101100101100100100110011000101101100000010100010101010011101101110101101111011010010101011001001000001011100011010101100111100110110101101101110000011010101101111')
')
b2 = c('0b
)
b2 <- c('0b100011010011000000001011101100101110111111101110101111101000111110110100011000010100010000101010111101000100011111101001110010010011111100110110100010000000011000101000011010100000110100001011001111000001100100101110111101111001010100100010110001001010110000011111011111010001001011101001110001100100011101100101100000011011101111010000001000000111111111110111100101101011010100011010100101000001101001110110011111011111110101010000111011111011011011100111001000011000011011111100101001110001111110001000000101000100110010111011011010100100111000001010110000101111000010110001011100010010110100010111111001000110011100111100111010100111110001110010110111010000010101000111110110110101010101000111110100010010000000110010000010101100101100101100100100110011000101101100000010100010101010011101101110101101111011010010101011001001000001011100011010101100111100110110101101101110000011010101101111')
b3 <- c('0b
b4 <- c('0b
010011000011101101100000011110101000101110010011000001010000000100111000010011000101011010000100000001000011100111001000101001101111100110011000110110101010101010')
b5 <- c('0b
b6 <- c('0b
01011100111011001011000100110011100011010100000101000010110000110011110111011101000010000000011111000011111110010100101010110010011111001001101101011100011011011011001111011000011010011100010001110011000010001010011111011101111010110011100111101010101000100010100010111100011001100110000011000100100010101100010001101111101000011110100101100111000011010101011101001001011111100011100100')
'
b6 = c('0b
1011100111011001011000100110011100011010100000101000010110000110011110111011101000010000000011111000011111110010100101010110010011111001001101101011100011011011011001111011000011010011100010001110011000010001010011111011101111010110011100111101010101000100010100010111100011001100110000011000100100010101100010001101111101000011110100101100111000011010101011101001001011111100011100100')
b7 <- c('0b

b8 <- c('0b
01011111011010100111010011')
b9 <- c('0b
000111000110101110110001011001101000100111000001010000100000011111111111100111001001100101000111010000100011111000001000101100100111101101011011010111011011100100100010110110001110101011000101011101000000100000100001010111001110100111111011101111000000100111')
b10 <- c('0b
save.image("C:/Users/KLH/Downloads/6001x/code_workspace.m.RData")
help(xor)
x11 <- xor(b1, b2)
update
chooseCRANmirror()
q()
x <- c(1, 3, 5)
y <- c(3, 2, 10)
z <- cbind(x, y)
summary(z)
z
x <- c(17, 14, 4, 5, 13, 12, 10)
b <- x[x>10] == 4
b
x[x>10]<-4
x
x <- c(4, TRUE)
class(x)
x <- 4
class(x)
install.packages("swirl")
library(swirl)
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z*2+100
mySqrt <- sqrt(z-1)
mySqrt
myDiv <- z/mySqrt
myDiv
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
1:20
pi:10
15:1
?`:`
seq(1, 20)
seq(0, 10, by=0.5)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along = my_seq)
seq_along(my_seq)
rep(0, 40)
rep(0, times = 40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
install.packages("kernSmooth")
library("KernSmooth", lib.loc="C:/Program Files/R/R-3.0.2/library")
install.packages(c("e1071", "evaluate", "foreign", "Hmisc", "lattice", "markdown", "mgcv", "plotrix", "plyr", "reshape2", "scales"))
load(KernSmooth)
library(KernSmooth)
install(KernSmooth)
install.packages("KernSmooth")
require(KernSmooth)
z <- 5
while(z >=3 && z <= 10) {
print(z)
coin <- rbinom(1, 1, 0.5)
if (coin == 1) {
z <- z + 1
} else {
z <- z - 1
}
}
z <- 5
while(z >=3 && z <= 10) {
print(z)
coin <- rbinom(1, 1, 0.5)
if (coin == 1) {
z <- z + 1
} else {
z <- z - 1
}
}
add2 <- function(a, b) {}
add2 <- function(a, b) {}
add2 <- function(a, b)  {
a+b
}
add2(3,5)
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5)  {
x <- 0
}
f <- function(x) {
g <- function(y) {
y+z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
library(datasets)
data(iris)
?iris
summary(iris)
lapply(split(iris, iris$Species), mean)
vir <- iris[Species$virginica]
iris$Species
f <- gl(3, 50)
lapply(split(iris[,1], f), mean)
library(datasets)
data(mtcars)
?mtcars
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
209.21429 - 82.63636
?<<-
help(<<-)
<<-
install.packages("markdown")
setwd("C:/Users/KLH/datasciencecoursera")
